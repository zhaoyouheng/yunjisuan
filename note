常用便捷操作及部分字符意义：	2
关于某些特定文件的常识：	4
systemctl服务管理：	7
服务的管理	7
systemctl start   服务名         #启动服务	7
RHEL7:运行模式	8
RHEL6：	8
目录结构	9
主要用途	9
重设root密码	9
部分常用命令；	10
find	10
cd — Change Directory      #切换工作目录	12
pwd — Print Working Directory    显示当前所在位置	13
ls	— List	13
du -sh          统计目录的大小	13
touch	   新建空文件	13
mkdir	— Make Directory [/路径/]目录名...   新建空目录	13
rm -rf          :递归删除(含目录)、强制删除	14
mv	  原文件...       目标路径(重命名:路径不变的移动)	14
cp	14
exit             退出	14
echo	   显示一行文本	14
wc	 输出文件中的行数、单词数、字节数	15
date	15
mount	20
umount	20
showmount	-e	20
wget	20
alias（注意全为小写）	20
unalias         取消别名	20
nslookup	21
host           使用域名服务器查询主机名字	21
column -t	21
软件包的安装管理工具：	21

常用便捷操作及部分字符意义：
Ctrl+C		           结束当前任务
Ctrl+Z		           暂停当前任务并放至后台
Ctrl+Shift+T	        新建终端页
Ctrl + u              剪切、删除（光标以前的）内容
Ctrl + k              剪切、删除（光标以后的）内容
Ctrl+shift+c          命令行复制内容
Ctrl+Shift+V	        粘贴
Ctrl+L		            清屏
Ctrl+U		            回删整行
Ctrl+W		            回删一个单词
Ctrl shift  +         字体变大
Ctrl  -              字体变小
Ctrl + q             取消屏幕锁定
Ctrl + s             执行屏幕锁定
Tab			       补全
!+任意命令开头	    重复上一条以此开头的命令
Esc/Alt+ . 		    粘贴上条命令的参数
?			           匹配任意一个字符
*			           匹配任意字串
[ ]			       匹配包含在连续范围内的一个字符
{}		           	匹配包含在一组字串组内的字串
^+字串		       匹配以该字串开头的所有字串
字串+$		       匹配以该字串结尾的所有字串
^$			       匹配空行
~ 、 . 、 ..		    在路径中使用的符号
>、>>、<、2>、&>	重定向
|			管道
#			注释
#!			环境声明
$#			已加在的未知变量的个数（使用的未知变量总数）
$*			所有未知变量的值
$?			       上一条命令的报错次数
$RANDOM		在0-32767范围内随机一个数字
$USER			登陆的用户名
$PATH			储存命令的搜寻路径
$HISTSIZE		历史命令的最大储存数







关于某些特定文件的常识：
/dev/null
空设备（黑洞设备），清理无意义的输出结果（释放空间）
/bin/bash
bash解释器的位置
/usr/bin/python
python解释器的位置
/sbin/nologin
空解释器的位置
/bin/false
新用户默认的登陆Shell
/etc/redhat-release
系统版本信息文件
/proc/meminfo
内存信息文件
/etc/hostname
主机名信息文件
/etc/passwd
用户信息文件
/etc/group
用户组信息文件
/etc/shadow
用户密码信息文件
/etc/default/useradd
新创建用户的默认信息文件（包括用户家目录、环境配置文件的目录、登入执行首个程序等）
/etc/skel
新创建用户的环境配置默认文件（新用户的家目录下的文件是从这里复制过去的）
/root/.bashrc
root用户的alias开机预定义配置文件，每次打开终端的时候即运行一遍
/etc/bashrc
所有用户的alias开机预定义配置文件，每次打开终端的时候即运行一遍
/etc/sysconfig/network-scripts
网卡配置文件存放目录，里面的以“ifcfg-”开头、网卡名结尾的文件，就是每张网卡的配置文件
/etc/fstab
开机自动挂载配置文件
/etc/profile
开机第一个运行的系统设置文件
/etc/rc.local
开机运行的脚本
/etc/resolv.conf
    DNS 配置文件 
systemctl服务管理：
systemd介绍
 一个更高效的系统&服务管理器
– 开机服务并行启动,各系统服务间的精确依赖
– 配置目录:/etc/systemd/system/
– 服务目录:/lib/systemd/system/
– 主要管理工具:systemctl
服务的管理
systemctl start   服务名         #启动服务
systemctl stop    服务名         #停止服务
systemctl restart 服务名         #重起服务
systemctl status  服务名         #查看服务当前状态
systemctl enable   服务名        #设置开机自起动
systemctl disable  服务名        #设置开机不自起
systemctl is-enabled  服务名  #查看服务器是否随机自启动
RHEL7:运行模式
    systemctl isolate multi-user.target #当前直接切换成字符模式
    systemctl isolate graphical.target  #当前直接切换成图形模式
    systemctl set-default graphical.target #修改默认运行模式
    systemctl get-default          #查看默认运行模式
运行模式的管理（运行级别）    
 RHEL6：
            0 : 关机         
            1 : 单用户模式（破解密码模式）   
	    2：字符界面（不支持网络）  
	    3：字符界面（支持网络） 
	    4：无定义
	    5：图形界面       
	    6：重起   
     切换运行级别的命令：init 
目录结构

              •  认识Linux的目录层次:
              – man hier
 主要用途
/boot              存放系统引导必需的文件,包括内核、启动配置
/bin、/sbin        存放各种命令程序
/dev               存放硬盘、键盘、鼠标、光驱等各种设备文件
/etc               存放Linux系统及各种程序的配置文件
/root、/home/用户名  分别是管理员root、普通用户的默认家目录
/var 			  存放日志文件、邮箱目录等经常变化的文件
/proc              存放内存中的映射数据,不占用磁盘
/tmp               存放系统运行过程中使用的一些临时文件

重设root密码  

案例1:为虚拟机 server 重设管理密码
1.重启系统,进入 recovery 恢复模式(修复模式)
按e键，找到 linux16 行，末尾添加 rd.break console=tty0
按 ctrl + x 启动
2.以可写方式重新挂载 /sysroot,并切换到此环境
switch_root# mount  -o  remount,rw  /sysroot
switch_root# chroot  /sysroot
sh-3.2#
3.将root用户的密码设置为 redhat
echo  redhat  |  passwd  --stdin  root
4.重设SELinux安全标签(安全增强版Linux)
touch  /.autorelabel    #让  SElinux  失忆
5.先后执行 exit、reboot 完成修复
exit
reboot



部分常用命令；


           find   
                    -type：按文件类型查找
                                 b      特殊块文件(缓冲的)

                                 c      特殊字符文件(不缓冲)

                                 d      目录

                                 p      命名管道 (FIFO)

                                 f      普通文件

                                 l      符号链接

                                 s      套接字

                                 D      门 (Solaris 特有)

                    -name：按文件名称查找

                    -size：按文件大小查找
  
                    -mtime：n按内容修改的时间

                    -iname：根据名称查找，忽略大小写

                    -uid：根据 uid 查找，属于这个用户的文件

                    -gid ：根据 gid 查找，属于这个组的文件

                    -user ：根据用户名查找，查找属于这个用户的

                    -group ：根据组名查找，查找属于这个组的

                    -nouser ：查找这个文件不属于任何用户的

                    -nogroup ：查找这个文件不属于任何组的

                    -maxdepth ：限制目录查找的深度

                    -inum ：根据文件 i 节点编号查找

                    -exec {} \;   ：find 命令的重定向


	     cd — Change Directory      #切换工作目录
                                  
                               ~用户名  表示用户   用户名  的家目录 
                               . 表示当前目录
                               .. 表示父目录



	     pwd — Print Working Directory    显示当前所在位置

	     ls	— List	
                          -l:以长格式显示
                          -a：包括. ..及. 开头的隐藏文档
                          -A:包括名称以 . 开头的隐藏文档
                          -d:显示目录本身(而不是内容)的属性
                          -h:提供易读的容量单位(K、M等)
                          -Z：查看安全上下文
                          -i：查看文件i节点
	     du -sh          统计目录的大小
                                  
	     touch		  新建空文件

         mkdir	— Make Directory	[/路径/]目录名...   新建空目录
                          -m:为新建立的目录设定模式，就象应用命令chmod一样
                          -p:为所给出的目录建立丢失了的父目录

	     rm -rf          :递归删除(含目录)、强制删除

	     mv		 原文件...       目标路径(重命名:路径不变的移动)
                           -f, --force    覆盖前永不提示
                           -i, --interactive     覆盖前提示
              

	     cp		
                           -r:递归,复制目录时必须有此选项
                           -p:保留原文件的所有者、组、权限
	                     -f:如果需要,删除已存在的目的文件.(如前所述.)
                           -i:提示是否覆盖现有普通目标文件。

	     exit             退出

	     echo		  显示一行文本
                           -n:不输出行尾的换行符

        wc		输出文件中的行数、单词数、字节数

                            -c, --bytes, --chars:输出字节统计数。
                            -l, --lines:输出换行符统计数。 
                            -L, --max-line-length:输出最长的行的长度。
                            -w, --words:输出单词统计数。

	     date	
                           -f, --file=DATEFILE
           
                           -I, --iso-8601[=TIMESPEC] 按照 ISO-8601 的日期/时间格式输出时间.
   
                           -r, --reference=FILE
                                            显示 FILE 的最后修改时间
                           -R, --rfc-822
                                             根据 RFC-822 指定格式输出日期
                           -s, --set=STRING
                                             根据 STRING 设置时间
                           -u, --utc, --universal
                                             显示或设置全球时间(格林威治时间)

                         date +%a   当前区域的星期几的简写
                                    Sat
                         date +%b   当前区域的月份的简写
                                    Aug
                         date +%c   当前区域的日期和时间
                                    Sat 04 Aug 2018 08:41:27 AM CST
                         date +%d   (月份中的)几号(用两位表示)
                                               04
                         date +%e     (月份中的)几号(去零表示)
                                               4                   
                         date +%g     年的后两位数字 (00..99)
                                               18
                         date +%h    同 %b
                                     Aug                         
                         date +%j    (一年中的)第几天(用三位表示)
                                               216
                         date +%k    小时(按 24 小时制显示，去零显示)
                                                8
                         date +%l    小时(按 24 小时制显示，去零显示)
                                                8
                         date +%m    月份(用两位表示) 
                                                08
                         date +%p    当前时间是上午 AM 还是下午 PM
                                     AM
                         date +%r      时间,按 12 小时制显示 (hh:mm:ss [A/P]M)
                                     08:41:27 AM
                         date +%s    从 1970年1月1日0点0分0秒到现在历经的秒数
                                                1533343287
                         date +%u    
                                                6
                         date +%w     用数字表示星期几 (0..6); 0 代表星期天
                                                6
                         date +%x    按照 (mm/dd/yy) 格式显示当前日期
                                                08/04/2018
                         date +%y    年的后两位数字 (00..99)
                                                18
                         date +%z    按照 RFC-822 中指定的数字时区显示(如, -0500)
                                                +0800
                         date +%A     当前区域的星期几的全称 (不同长度)
                                     Saturday
                         date +%B     当前区域的星期几的全称 (不同长度)
                                     August
                         date +%C     
                                                20日期
                         date +%D   (按照 月/日期/年 格式显示) (mm/dd/yy)
                                                08/04/18
                         date +%F
                                                2018-08-04
                         date +%G     
                                                2018
                         date +%H    小时(按 24 小时制显示，用两位表示)   
                                                08
                         date +%I     小时(按 12 小时制显示，用两位表示)
                                                08
                         date +%M     分钟数(用两位表示)
                                                41
                         date +%N
                                                131609327
                         date +%P
                                      am
                         date +%R
                                                 08:41
                         date +%S     秒数(用两位表示)(00..60)
                                                 39
                         date +%T      时间,按 24 小时制显示(hh:mm:ss)
                                                 08:41:39
                         date +%U     (一年中的)第几个星期，以星期天作为一周的开始(用两位表示)
                                                 30
                         date +%V     (一年中的)第几个星期，以星期天作为一周的开始(用两位表示)
                                                  31
                         date +%W     (一年中的)第几个星期，以星期一作为一周的开始(用两位表示)
                                                 31
                         date +%X     按照 (%H:%M:%S) 格式显示当前时间
                                      08:41:39 AM
                         date +%Y      年(用 4 位表示) (1970...)
                                                 2018
                         date +%Z      时区(例如, EDT (美国东部时区)), 如果不能决定是哪个时区则为空
                                      CST
	          mount	
                          	-a	Mount all filesystems  mentioned in fstab                   
                               -o    rw,remount /sysroot
	          umount
	          showmount	-e
	          wget		
                               
                               -O file http://foo =    http://foo > file
	          alias（注意全为小写）
                                         别名='命令'  
                                -p：列出当前所有的别名设置
	          unalias         取消别名
	          nslookup        
                                        配置文件：/etc/resolv.conf
                                        是一个用于查询 Internet域名信息或诊断DNS 服务器问题的工具
                                        格式  +ip/域名

	          host           使用域名服务器查询主机名字

                column -t



软件包的安装管理工具：

rpm:
RPM   Red Hat Package Manager,RPM包管理器
可以用于生成,安装, 查询, 核实,更新以及卸载单个软件包.
一个包通常包括一个文件档以及关于包的信息,比如名字, 版本, 描述等.
-q	       软件名...                        #查询软件是否安装
-ivh	 软件名-版本信息.rpm...       #安装软件包
-e        软件名...                        #卸载软件包
--import /dev/RPM-GPG-KEY-redhat-release
-a, --all
查询所有安装的包

-f <file>, --file <file>
查询拥有文件<file>的包
-g <group>, --group <group>
查询属于???组<group>的包
-l, --list
列出该包的文件.



	yum：  
		配置文件：/etc/yum.repos.d/*.repo
				[  库名  ]
				name=库名解释
				baseurl=库源地址(ftp://	http://	file:///)
				enabled=1
				gpgcheck=0
		常用命令：
yum repolist
yum clean all
yum (-y) install
yum (-y) update
yum (-y) remove
yum (-y) reinstall
yum  provides */pxelinux.0 #查询仓库中那个软件包产生该文件
yum-config-manager --add=库源地址		（注意添加的配置文件没有“gpgcheck=0”）
createrepo /tools/other/        生成仓库数据文件
		主要作用：解决逻辑关系安装软件
		使用步骤：
			1.修改配置文件以指定库源
			2.使用yum -y install +软件名 安装软件
			3.完成

           特点：1. 大量软件rpm安装包
                 2.针对这些软件的 repodata/ 仓库档案
                    filelists.xml.gz      //软件包的文件安装清单
                    primary.xml.gz     //软件包的基本/主要信息
                    other.xml.gz       //软件包的其他信息
                    repomd.xml       //提供xml.gz的下载和校验信息
源码包:
linux常用安装源码包大部分软件都是通过源码安装的。
安装一个源码包，是需要我们自己把源代码编译成二进制的可执行文件。
修改这些源代码自定义功能，然后再去编译成你想要的。
使用源码包的好处除了可以自定义修改源代码外还可以定制相关的功能，因为源码包在编译的时候是可以附加额外的选项的。
源码包的编译用到了linux系统里的编译器，常见的源码包一般都是用C语言开发的，这也是因为C语言为linux上最标准的程序语言。
Linux上的C语言编译器叫做gcc，利用它就可以把C语言变成可执行的二进制文件。所以如果你的机器上没有安装gcc就没有办法去编译源码。
你可以使用 yum install -y gcc 来完成安装。
 源码包------开发工具(gcc与make)----->可以执行的程序-------->运行安装

                 • 主要优点
                         – 获得软件的最新版,及时修复bug
                         – 软件功能可按需选择/定制,有更多软件可供选择
                         – 源码包适用各种平台

                     步骤1：安装gcc与make
                          yum -y install gcc make

 

                     步骤3：  ./configure 配置,指定功能模块等选项
                                  检测系统是否安装gcc
                   --prefix=路径      #指定安装目录
                ./configure 
   在这一步可以定制功能，加上相应的选项即可，具有有什么选项可以通过./config --help 命令来查看。在这一步会自动检测你的linux系统与相关的套件是否有编译该源码包时需要的库，因为一旦缺少某个库就不能完成编译。只有检测通过后才会生成一个Makefile文件。



      常见错误提示：gcc软件没有安装
checking for gcc... no
checking for cc... no
checking for cl.exe... no
configure: error: no acceptable C compiler found in $PATH
See `config.log' for more details.


   步骤4:make 编译,生成可执行的二进制程序文件

    # make
 make	使用这个命令会根据Makefile文件中预设的参数进行编译，这一步其实就是gcc在工作了。

   步骤5:make install 安装,将编译好的文件复制到安装目录

# make  install
which inotifywait     #查看是否具备该程序
/usr/local/bin/inotifywait
make install 安装步骤，生成相关的软件存放目录和配置文件的过程。


                     
        上面介绍的3步并不是所有的源码包软件都一样的，安装步骤并不是这样，也就是说源码包的安装并非具有一定的标准安装步骤。
         这就需要你拿到源码包解压后，然后进入到目录找相关的帮助文档，通常会以INSTALL或者README为文件名。所以，你一定要去看一下。




常用查看命令（含修改）：
	  hostname、uname -n、hostname+参数
      hostnamectl set-hostname+参数(永久)
      echo  主机名  > /etc/hostname(永久)
	 查看及设置主机名
	lscpu
		查看中央处理器（cpu）信息
	ifconfig、ifconfig+网卡名、ifconfig+网卡名+up/down
		查看网卡信息及启用、关闭网卡
	route、route gateway
		查看路由/网关信息
	uname -a
		查看内核、硬件架构、处理器、硬件平台、操作系统等信息
	uname -r
		查看内核版本
	lsblk
		查看本机识别硬盘
	blkid
		查看分区UUID及文件系统信息
	df -h
		查看所有挂载信息
	pvs -a
		显示物理卷的信息
	lvs
		显示逻辑卷的信息
	vgs
		显示卷组的信息
	teamdctl+虚拟网卡名+state
		显示虚拟网卡的信息
	history、history -c
		查看及清空历史命令
      
      pwd — Print Working Directory
                显示当前所在位置

      ls — List
               格式:ls [选项]... [目录或文件名]...
           -l :以长格式显示 ,显示目录内容的详细信息 
               蓝色:目录
               黑色：文本文件
               青色：快捷方式      绿色：执行程序
      cat
                查看文本文件内容      
      less 
               专门用于查看内容较多的文件

      head  -n   
                #默认显示前10行
      tail  -n 
                #默认显示后10行

      grep
                输出包含指定字符串的行
                格式:  grep  字符串    目标文件
             -n  显示行号
             -v,取反匹配
             -i,忽略大小写
             ^root   以字符串root开头
             root$   以字符串root结尾
                 ^$        匹配空行


常用连接命令：
	ping		-t	-a	-s	-c	-i	-W
	ssh		-X	-Y
	scp		-r
	telnet
	tarcert
	nslookup
	exit


查看当前哪些用户在线的 Linux 命令
                         w	
                                        显示目前系统登录用户

                         who	
                                       显示目前已登录用户信息

                         last	
                                       列出目前与过去登入系统的用户相关信息

                         lastlog	
                                       检查某特定用户上次登录时间

                         finger 
                                	用户信息查找程序

                         id	
                                        显示指定用户或当前用户的用户与组信息



常用逻辑运算符（需在前后用带空格的[ ]括起来）：
	-e A		A路径存在即为真
	-d A		A路径存在且为目录即为真
	-f A		A路径存在且为文件即为真
	-r A		A路径存在且有读权限即为真
	-w A		A路径存在且有写权限即为真
	-x A		A路径存在且有执行权限即为真
	A -eq B	A等于B即为真
	A -ne B	A不等于B即为真
	A -gt B	A大于B即为真
	A -ge B	A大于等于B即为真
	A -lt B	A小于B即为真
	A -le B	A小于等于B即为真
	A==B		A和B字符串一致即为真
	A!=B		A和B字符串不一致即为真
	!A		取[ not A ]的值
	A&&B		取[ A and B ]的值
	A||B		取[ A or B ]的值
	

非顺序结构：

	选择结构：
	if [ 逻辑表达式a ];
	then 命令表达式A;
	elif [ 逻辑表达式b ];
	then 命令表达式B;
	elif [ 逻辑表达式c ];
	then 命令表达式C;
	...
	else 命令表达式N;
	fi
	
	循环结构for：
	for 变量名 in 值列表;
	do 循环体;
	done
	
	循环结构while：
	while [ 逻辑表达式 ];
	do 循环体;
	done


用户和组相关信息：
    基本配置文件：
        用户基本信息存放： /etc/passwd 
            root:x:0:0:root:/root:/bin/bash
                用户名:密码占位符:UID:基本组的GID:用户描述信息:家目录:解释器程序
        用户密码信息：/etc/shadow 
        组基本信息：/etc/group
        组名:组的密码占位符:GID:组成员列表
    常用用户和组命令：
      useradd [选项]... 用户名
        常用命令选项
      -u 用户id、-d 家目录路径、-s 解释器程序、-G 附加组、-g
        使用 usermod 命令
       usermod [选项]... 用户名 
        常用命令选项
       -u 用户id、-d 家目录路径、-s 登录Shell、-G 附加组
	 userdel  [-r]  用户名        #连同家目录一并删除
       groupadd [-g 组ID] 组名
	 groupdel
       gpasswd -a 用户名  组名
       gpasswd -d 用户名  组名
	 su+用户名
	 su - +用户名
       passwd [用户名]
       echo '密码' | passwd --stdin 用户名
                非交互式设置密码

解压工具信息：
       tar

            备份与恢复,打包及压缩
            1.方便对零散文档的管理      
            2.减小空间的占用
          Linux独有的压缩的格式
          gzip------->.gz
          bzip2------>.bz2
          xz--------->.xz
打包:
   tar  [选项]   /路径/压缩包的名字     /被归档压缩的源文件  ......
解包:
   tar  [选项]   /路径/压缩包的名字   -C(大写)  释放位置 
   tar 集成备份工具
              -c:创建归档
              -x:释放归档
              -f:指定归档文件名称
              -z、-j、-J:调用 .gz、.bz2、.xz 格式的工具进行处理
              -t:显示归档中的文件清单
              -C(大写):  释放位置

          zip

             归档工具，跨平台的压缩归档工具
          zip [-r] 备份文件.zip 被归档的文档...
             释放归档+解压操作
          unzip 备份文件.zip [-d 目标文件夹]

硬盘分区，格式化，挂载相关命令：
               识别硬盘 => 分区规划 => 格式化 => 挂载使用
            请描述该设备/dev/sda5标识的含义:
                SCSI类型的设备,第一个硬盘的第五个分区
                SCSI类型的设备,第一个硬盘的第一个逻辑分区

	MBR/msdos：
            主分区   扩展分区  逻辑分区
             1~4个主分区  或者  3个主分区+1个扩展分区(n个逻辑分区)
            最大支持容量为 2.2TB 的磁盘
            扩展分区不能格式化
		常用命令：
			fdisk+设备路径
				命令n：创建新的分区
				命令p：查看分区表
				命令d：删除分区
				命令w：保存并退出
		主要作用：管理设备的分区
		使用步骤：
			1.使用fdisk+设备路径，打开fdisk工具
			2.输入“n”命令创建新的分区
			3.Partition type默认使用p类型（直接回车）
			4.分区号默认按顺序依次使用1-4（直接回车）
			5.起始扇区默认按可用储存空间地址顺序使用默认值（直接回车）
			6.Last扇区，可以写最末储存地址具体为多少，也可以“+n”格式写从起始算起加多少空间，以决定分区的空间大小（要写单位）
			7.输入“w”命令保存并退出
			8.完成（可以进入/dev目录查看验证分区，或者通过fdisk -l+,lsblk、blkid、pvs -a等命令进行验证）

	GPT： 
                支持128个主分区
		常用命令：
			parted+设备路径
			mktable gpt
			print
			mkpart
			unit MB
			unit GB
			quit
		主要作用：设备分区
		使用步骤：
			1.使用parted+设备路径，打开parted工具
			2.输入mktable gpt命令，设置分区模式为GPT
			3.使用mkpart命令创建新的分区
			4.输入分区名称
			5.输入文件系统类型
			6.输入储存空间的起始点
			7.输入储存空间的结束点
			8.使用quit命令退出parted工具（可以使用print命令验证分区）
			9.完成（可以进入/dev目录查看验证分区，或者通过lsblk、blkid、pvs -a等命令进行验证）
        
        LVM
                 逻辑卷管理
                   逻辑卷作用: 
                       1.整合分散的空间 
                       2.可以动态扩大空间
                    物理卷  Physical Volume
                    卷组    Volume Group
                    逻辑卷  Logical Volume
                    逻辑卷创建:  
                    零散空闲存储 ----> 整合的虚拟磁盘---->虚拟的分区-->格式化--->挂载使用
                    物理卷(PV)------->卷组(VG)----->逻辑卷(LV)
                    将众多的物理卷(PV),组成卷组(VG),再从卷组中划分出逻辑卷(LV)
                   创建逻辑卷命令:
                      创建卷组：
                      格式：vgcreate   卷组名     设备路径
                      vgs     #显示卷组基本信息
                      pvs     #显示物理卷基本信息
                      创建逻辑卷
                      格式：lvcreate  -n 逻辑卷名字   -L  大小      卷组名
                      lvs   #显示逻辑卷基本信息
                       扩展逻辑卷：
                     卷组没有足够的剩余空间(有的话直接第二步)
                      1.扩展卷组空间
                   vgextend 卷组名     设备路径
                      2.直接扩展逻辑卷的空间
                  lvextend -L  扩展到的大小
                  lvextend -L  +扩展的大小
                      3.扩展逻辑卷的文件系统
                           刷新ext4文件系统：resize2fs
                           刷新xfs文件系统：xfs_growfs
                     逻辑卷可以做缩减（了解）
                     ext4文件系统支持缩减
                     xfs文件系统不支持缩减

                    卷组划分空间的单位PE， 默认每一个PE大小4M
                    创建卷组的时候设置PE大小
                    vgcreate -s PE大小 卷组名 空闲分区...
                    vgchange -s PE大小 卷组名 空闲分区...
                    创建逻辑卷的时候指定PE个数
                    lvcreate -l PE个数 -n 逻辑卷名 卷组名
                    vgdisplay  卷组名      #查看PE大小

                    逻辑卷删除
                    先删除逻辑卷，再删除卷组，最后删除物理卷
                    lvremove
                    vgremove
                    pvremove
           
         SWAP
 
                  什么是交换空间
                • 相当于虚拟内存,
                     当物理内存不够用时,使用磁盘空间来模拟内存
                     在一定程度上缓解内存不足的问题
                     交换分区:以空闲分区充当的交换空间
                一、 创建交换空间

                       1.前提要有空闲的分区
                       2.首先格式化交换文件系统
                         mkswap 

                       3. 启用交换分区
                         swapon /dev/vdb1     #启用/dev/vdb1交换分区
                         swapon  -s           #查看交换空间的组成  成员
                         swapoff              #停用交换分区

                       4.完成开机自动启用，交换分区
                         vim /etc/fstab
                         /dev/vdb1  swap  swap defaults 0 0            
                         swapon  -a           #检测交换分区是否书写正确  
                         swapon  -s      


          RAID阵列概述  :
                           廉价冗余磁盘阵列
                     Redundant Arrays of Inexpensive Disks
                           通过硬件/软件技术,将多个较小/低速的磁盘整合成一个大磁盘
                           阵列的价值:提升I/O效率、硬件级别的数据冗余
                           不同RAID级别的功能、特性各不相同
               RAID 1,镜像模式
                           一个文档复制成多份,分别写入不同磁盘
                           多份拷贝提高可靠性,效率无提升
                           至少需要2块磁盘
  
               RAID5,高性价比模式
                          相当于RAID0和RAID1的折中方案
                          需要至少一块磁盘的容量来存放校验数据
                          至少需要3块磁盘

               RAID6,高性价比/可靠模式
                          相当于扩展的RAID5阵列,提供2份独立校验方案
                          需要至少两块磁盘的容量来存放校验数据
                          至少需要4块磁盘

               RAID 0+1/RAID 1+0
                          整合RAID 0、RAID 1的优势
                          并行存取提高效率、镜像写入提高可靠性
                          至少需要4块磁盘
                          • 硬RAID:由RAID控制卡管理阵列
                               – 主板 --> 阵列卡 --> 磁盘 --> 操作系统 --> 数据

                          • 软RAID:由操作系统来管理阵列
                               – 主板--> 磁盘-->操作系统-->RAID软件 -->数据


	mkfs：
		常用命令：
			mkfs.ext3+(-f)+设备路径
			mkfs.ext4+(-f)+设备路径
			mkfs.xfs+(-f)+设备路径
			mkfs.vfat -F 32+(-f)+设备路径
		主要作用：格式化设备
		使用步骤：
			1.选择目标格式对应的命令对设备进行分区
			2.完成（可以使用ls -lh命令验证设备格式）
           开机自动挂载文件 /etc/fstab(file system  table)
           设备路径       挂载点        类型      参数(支持的功能)    备份标记     检测顺序
                     mount -a   #书写完挂载测试
                     df -h      #查看挂载



权限相关：
         1.权限适用对象(归属)
         所有者:拥有此文件/目录的用户-user   u
         所属组:拥有此文件/目录的组-group      g
         其他用户:除所有者、所属组以外的用户-other  o
         目录的 r 权限:能够 ls 浏览此目录内容
         目录的 w 权限:能够执行 rm/mv/cp/mkdir/touch/ 等更改目录内容的操作
         目录的 x 权限:能够 cd 切换到此目录
         使用ls -l 或 ls -ld命令查看文件或目录       
         权限位   硬连接数  属主 属组 大小 最后修改时间 文件/目录名称  
         如何判断用户具备的权限:
                   1).判断用户对于文档的角色     所有者>所属组>其他人   匹配及停止
                   2).查看相应角色权限位置 
        2.权限的数值表示
             • 权限的数值化
                     基本权限:r = 4,w = 2,x = 1
                     附加权限:SUID = 4,SGID = 2,Sticky Bit = 1
系统权限相关命令：
       chmod [-R]（递归设置）  归属关系+-=权限类别    文档..
       chown [-R] 属主 文档...
       chown [-R] :属组 文档...
       chown [-R] 属主:属组 文档..
	 chcon [-R]	--reference=模板目录 目标目录
        
	 acl：
		常用命令：
			getfacl 文档
			setfacl -m u:用户名:权限类别  文档  -m=--modify
			setfacl -m g:组名:权限类别  文档
			setfacl -x u:用户名  文档           -x=--remove
			setfacl -x g:组名  文档
			setfacl -b 文档
		主要作用：对特定用户或组进行访问控制
		使用步骤：
			1.使用对应命令对文档或者目录进行访问控制设置
			2.完成（可以使用getfacl验证权限）


            特殊权限：
               特殊权限描述：
                      1 SUID

                           1）.SUID权限仅对二进制可执行文件有效
                                   2）.执行者对于该文件具有x的权限
                                   3）.本权限仅在执行该文件的过程中有效
                                   4）.执行者将具有该文件拥有者的权限

                      2 SGID

                           2.1 SGID对目录
                                        1.使用者若对于此目录具有 r 与 x 的权限时，该使用者能够进入此目录
                                        2.使用者在此目录下的群组将会变成该目录的群组
                                        3.若使用者在此目录下具有 w 的权限(可以新建文件)，则使用者所创建的新文件，该新文件的群组与此目录的群组相同
                           2.2 SGID对文件
                               1.SGID 对二进制可执行文件有效
                                        2.程式执行者对于该文件来说，需具备 x 的权限
                                        3.执行者在执行的过程中将会获得该文件群组的支援（用于改文件群组的权限）

                      3 SBIT
                                        1）.仅对目录有效，对文件无效
                                        2）.当使用者在该目录下建立文件或目录时(有权限的情况下)，仅自己与 root 才有权力删除新建的目录或文件
           

                      怎么操作SUID、SBID、SBIT：
                               操作这些标志与操作文件权限的命令是一样的, 都是 chmod. 有两种方法来操作,
                                 (1)符号类型改变权限
                                       1.chmod u+s testbin-- 为testbin文件加上setuid标志.
                                       2.chmod g+s testdir-- 为testdir目录加上setgid标志
                                       3.chmod o+t testdir-- 为testdir目录加上sticky标志
                                (2) 数字类型改变档案权限
                                       1.a - setuid位, 如果该位为1, 则表示设置setuid 4---
                                       2.b - setgid位, 如果该位为1, 则表示设置setgid 2---
                                       3.c - sticky位, 如果该位为1, 则表示设置sticky 1---
                                              设置完这些标志后, 可以用 ls -l 来查看. 如果有这些标志, 则会在原来的执行标志位置上显示. 如
                                       1.rwsrw-r-- 表示有setuid标志
                                       2.rwxrwsrw- 表示有setgid标志
                                       3.rwxrw-rwt 表示有sticky标志
                                如果本来在该位上有x, 则这些特殊标志显示为小写字母 (s, s, t). 否则, 显示为大写字母 (S, S, T)

                              其他权限操作
                                        SELinux：  
                                        Firewall:
                                                    服务本身权限：
                         Permission denied : 权限不足  
 

Linux 下文件删除的原理：
                  Linux 系统是通过 link 的数量来控制文件删除的，只有当一个文件不存在任何 link 的时候，这个文件才会被删除。

                       一般来说每个文件两个 link 计数器来控制 i_count 和 i_nlink。当一个文件被一个程序占用的时候 i_count 就加 1。

                        当文件的硬链接多一个的时候 i_nlink 也加 1。删除一个文件，就是让这个文件，没有进程占用，同时 i_link 数量为 0。
Linux 下软链接和硬链接的区别：

                       在 Linux 系统中，链接分为两种，一种是硬链接（Hard link），另一种称为符号链接或软链接（Symbolic Link）。
                              ①默认不带参数的情况下，ln 创建的是硬链接，带-s 参数的 ln 命令创建的是软链接；

                              ②硬链接文件与源文件的 inode 节点号相同，而软链接文件的 inode 节点号，与源文件不同；

                              ③ln 命令不能对目录创建硬链接，但可以创建软链接。对目录的软链接会经常使用到；

                              ④删除软链接文件，对源文件和硬链接文件无任何影响；

                              ⑤删除文件的硬链接文件，对源文件及软链接文件无任何影响；

                              ⑥删除链接文件的源文件，对硬链接文件无影响，会导致其软链接失效（红底白字闪烁状）；

                              ⑦同时删除源文件及其硬链接文件，整个文件才会被真正的删除；

                              ⑧很多硬件设备的快照功能，使用的就是类似硬链接的原理；

                              ⑨软链接可以跨文件系统，硬链接不可以跨文件系统。
              
        创建快捷方式的命令
              ln,创建软连接命令        
                     
                       ln -s 原始文件或目录 软连接文件

              ln,创建硬连接命令

                       ln 原始文件 硬连接文件

              ls -i查看文件i节点



    
系统自带软件工具操作

	nmcli：
		常用命令：
			nmcli connection modify+网卡名
				ipv4.method
				ipv4.addresses
				(ipv4.geteway)
				ipv4.dns
				connection.autoconnect yes
				autoconnect
				ipv6.method
				ipv6.addresses
			nmcli connection up+网卡名
			nmcli connection delete+网卡名
			nmcii connection show
			nm-config-manager
			nmcli connection add+网卡名
				con-name							配置文件名
				ifname							ifconfig显示的名字
				type ethernet						以太网接口类型
				type team							虚拟网卡类型
				type team-slave						虚拟网卡的奴隶设备类型
				config '{"runner":{"name":"acrivebackup"}}'	热备份配置
				master							加入的组
		主要作用：通过命令的方式，对网卡配置进行查询、修改、激活等操作
		使用步骤：
			一、配置地址
			1.修改网卡的配置文件
			2.激活网卡新的配置
			3.完成
			二、配置聚合链路（虚拟网卡）
			1.创建虚拟网卡
			2.创建虚拟网卡的奴隶设备
			3.配置组地址等信息
			4.激活虚拟网卡和其奴隶设备
			5.完成（可以查看虚拟网卡进行验证）
			
	







	SELinux：
		配置文件：/etc/selinux/config
				SELINUX=模式类型

		常用命令：
			getenforce
			setenforce 0
			setenforce 1
			getsebool -a
			setsebool (-P) 服务名 on/off
			semanage port -l
			semanage port -a -t 服务名 -p 协议 端口号
		主要作用：
			针对用户、进程、目录和文件提供了预设的保护策略
		使用步骤：
			一、利用SELinux进行保护
			1.使用相应命令或者修改配置文件对SELinux的模式进行设置
			2.如果将SELinux模式设置为default，则需要重启系统使设置生效
			3.完成（可以使用getenforce查看SELinux模式进行enforcing或permissive两种模式的验证）
			二、利用SELinux实现系统服务的开关
			1.使用“getsebool -a”查看SELinux可以控制的所有服务及状态
			2.找到想要开关的服务，使用“setsebool (-P) 服务名 on/off”开关服务
			3.完成（可以再次使用“getsebool -a |grep 服务名”进行验证）
                        三、SELinux策略，安全上下文值（标识）（路径的进入及配置文件读取）
                        1.参照标准目录,重设新目录的属性
                   – chcon [-R] --reference=模板目录   新目录
                   ls -Zd     #查看安全上下文
			四、利用SELinux开放端口号
			1.使用semanage port -l命令查看全部系统服务使用的端口号
			2.找到想要开放新端口的系统服务，使用“semanage port -a -t 服务名 -p 协议 端口号”开放端口
			3.重启该系统服务
			4.完成


部分服务的软件操作：

	ISCSI：
		软件名：targetcli（服务端）、iscsi-initiator-utils（客户端）、iscsi-initiator-utils.i686（客户端）
		服务名：target（服务端）、iscsid（客户端）、iscsi（客户端）
		配置文件：/etc/iscsi/initiatorname.iscsi（客户端）
				InitiatorName=访问服务端时声称的名字
		常用命令：
			targetcli
			/backstores/block create 服务端储存名 实际设备路径
			/iscsi/ create 磁盘组的IQN名称				（IQN名称：iqn.年份-月份.逆序域名）
			/iscsi/磁盘组IQN名/tpg1/luns create 服务端储存路径
			/iscsi/磁盘组IQN名/tpg1/portals create 服务端IP地址
			/iscsi/磁盘组IQN名/tgp1/acls create 客户端声称的名字
			ls
                   saveconfig
			exit
			iscsiadm
				--mode discoverydb
				--type sendtargets
				--portail 服务端IP地址
				--discover 服务端IP地址:3260端口,1 客户端声称的名字
                   iscsiadm --mode discoverydb --type sendtargets --portal            192.168.1.10 --discover
		主要作用：虚拟磁盘空间提供
		使用步骤：
			一、服务端共享磁盘空间
			1.安装targetcli
			2.使用targetcli命令运行软件
			3.使用“/backstores/block create 服务端储存名 实际设备路径”命令建立服务端储存
			4.使用“/iscsi/ create 磁盘组的IQN名称”命令建立磁盘组
			5.使用“/iscsi/磁盘组IQN名/tpg1/luns create 服务端储存路径”命令将共享的分区放入磁盘组
			6.使用“/iscsi/磁盘组IQN名/tpg1/portals create 服务端IP地址”命令指定提供服务的ip地址
			7.使用“/iscsi/磁盘组IQN名/tgp1/acls create 客户端声称的名字”命令设置访问控制
			8.使用exit命令退出软件（退出前，可以在软件内使用ls命令验证磁盘组）
			9.重启服务
			10.完成
			二、客户端连接磁盘
			1.安装iscsi-initiator-utils和iscsi-initiator-utils.i686
			2.修改配置文件设置访问时声称的名字
			3.使用systemctl daemon-reload命令
			4.重启iscsid服务刷新声称的名字
			5.使用iscsiadm命令
			6.重启iscsi服务加载共享储存
			7.完成（可以进入/dev目录查看验证分区，或者通过lsblk、blkid、pvs -a等命令进行验证）
			
			







	firewall：
		服务名：firewalld
		常用命令：
			firewall-cmd
				--get-default-zone=
					public	仅允许访问本机的sshd,ping等少数几个服务
					trusted	允许任何访问
					block		阻塞任何访问
					drop		丢弃任何访问
				--reload
				--permanent
				--zone=
				--list-all
				--add-service=服务名
				--add-source=源地址
				--add-forward-port=     
					port		原端口
					proto		传输层协议
					toport	目标端口
			firewall-config
		主要作用：隔离、过滤访问请求
		使用步骤：
			一、利用防火墙进行访问限制
			1.使用相应的命令对防火墙进行设置
			2.重新加载所有防火墙配置
			3.完成
			二、利用防火墙进行端口转发
			1.firewall-cmd --add-forward-port=port=原端口:proto=tcp/udp:toport=目标端口
			2.重新加载所有防火墙配置
			3.完成






	cron：
		软件名：cronie、crontabs
		服务名：crond
		配置文件：/var/spool/cron/*		（以用户名字命名的文件即是该用户的cron配置）
				*(分)  *(时)  *(日)  *(月)  *(周) +命令表达式N
					*：代表任意该项时间点
					,：用于分隔多个不连续的该项时间点
					-：用于表示连续的该项时间点
					/num：指定频率，每num的该项时间点
		日志文件：/var/log/crond
		常用命令：
			crontab -e (-u 用户名)
		主要作用：定时执行任务
		使用步骤：
			1.使用crontab -e 进入当前用户配置文件修改配置文件
			2.重启服务
			3.完成


	LDAP服务：
		前提：服务端己经搭建好LDAP共享服务。
		软件名：sssd（客户端）、authconfig-gtk（客户端）
		服务名：sssd（客户端）
		常用命令：
			authconfig-gtk(图形)
                   authcongih-tui（伪图形）（/etc/opetssl/carete/）
		主要作用：登陆系统时可以使用来自服务端的系统用户
		使用步骤：
			1.安装客户端软件sssd
			2.安装客户端图形工具authconfig-gtk
			3.用authconfig-gtk命令打开图形工具
			4.身份&验证选项卡中，“用户账户配置”-->“用户账户数据库”一项，选择“LDAP”
			5.在“LDAP搜索基础DN”一栏中填入“dc=example,dc=com”（指定服务端域名）
			6.在“LDAP服务器”一栏中填入“classroom.example.com”（指定服务端主机名）
			7.勾选“用TLS加密连接”
			8.点击“下载CA证书”，在弹出的窗口中“证书URL”一栏中填入“http://classroom.example.com/pub/example-ca.crt”
			9.重启服务
			10.完成（可以使用su命令登陆服务端的用户进行验证）




	chrony服务：
		前提：服务端已经搭建好NTP服务。
		软件名：chrony（客户端）
		服务名：chronyd（客户端）
		配置文件：/etc/chrony.conf（客户端）
				server 0.rhel.pool.ntp.org iburst
				server 1.rhel.pool.ntp.org iburst
				server 2.rhel.pool.ntp.org iburst
				server 3.rhel.pool.ntp.org iburst
				默认使用红帽系统在网上送的4台免费的NTP服务端地址，将它们注释掉，添加自己想用的NTP服务端地址，格式是
				server 地址 iburst
		主要作用：隔一会儿就自动同步系统时间
		使用步骤：
			1.安装客户端软件chrony
			2.修改配置文件以指定服务端位置
			3.重启服务
			4.完成（可以使用date -s命令修改时间，等待chrony服务自动同步时间进行验证）




	Mail服务：
		软件名：postfix
		服务名：postfix
		配置文件：/etc/postfix/main.cf
			取消注释并修改域名（默认补全域名后缀）：
				【99行】	myorigin = 域名			
			取消注释：
				【113行】	inet_interfaces = all		（允许所有网络接口）
			注释掉：
				【116行】	inet_interfaces = localhost	（注释掉“仅允许本机地址”）
			修改描述信息：
				【164行】	mydestination = 描述信息		（标识本域邮件）
		常用命令：
			mail -s '邮件标题' -r 发件用户[@收件域] 收件用户[@收件域]
			mail -u 发件用户
		使用步骤：
			1.安装postfix
			2.修改配置文件
			3.重启服务
			4.完成
		





	Web服务：
		软件名：httpd（服务端）、mod_ssl（服务端）
		服务名：httpd（服务端）
		配置文件：/etc/httpd/conf/httpd.conf		（httpd主配置文件）
				【95行】	ServerName 域名:端口号		（默认80端口）
				【119行】	DocumentRoot "网页文件存放地址"
		配置文件：/etc/httpd/conf/*.conf			（httpd调用配置文件）
		配置文件：/etc/httpd/conf.d/ssl.conf		（mod_ssl配置文件）
				【59行】	DocumentRoot "网页文件存放地址"
				【60行】	ServerName 域名:端口号		（默认443端口）
				【100行】	SSLCertificateFile 网站证书路径	（.crt文件，营业执照）
				【107行】	SSLCertificateKeyFile 密钥路径	（.key文件）
				【122行】	SSLCACertificateFile 根证书路径	（.crt文件，公安局信息、颁发证书的服务器信息）
		主要作用：使其他终端用http：//访问本机地址时，可以访问本机部署的网页文件
		使用步骤：
			一、部署网页文件
			1.安装httpd
			2.修改主配置文件，取消ServerName的注释
			3.将网页文件放入DocumentRoot指示的目录下，默认是/var/www/html
			4.重启服务
			5.完成（可以用浏览器访问“http：//自身的地址”进行验证）
			二、搭建虚拟Web主机
			1.安装httpd
			2.创建一个调用配置文件，任意命名即可
			3.根据虚拟主机的类型，修改调用配置文件如下
				（Listen 端口号）			（修改端口号的话就要侦听新的端口号，并要在SELinux策略中开放端口）
				<VirtualHost ip地址:端口号>
					ServerName 域名
					DocumentRoot 网页文件路径
				</VirtualHost>
			4.将网页文件分别放入每个虚拟主机所指示的路径下
			5.重启服务
			6.完成（可以用浏览器访问“http：//ip地址:端口号”或对应域名进行验证）
			三、配置Web服务访问控制
			1.安装httpd
			2.创建一个调用配置文件，任意命名即可
			3.修改调用配置文件如下
				<Directory 目录绝对路径>
					或者Require ip +允许访问的ip地址
					或者Require all denied
					或者Require all granted
				</Directory>
			4.重启服务
			5.完成
			四、修改DocumentRoot到/var/www外
			1.安装httpd
			2.修改主配置或调用配置文件中其中一个DocumentRoot指向目标目录
			3.使用“chcon -R --reference=/var/www +目标目录”命令对目标目录进行属性重设处理
			4.重启服务
			5.完成（可以使用“ls -Z +目标目录”验证目标目录的属性）
			五、部署用动态网站
			1.安装httpd
			2.创建一个调用配置文件，任意命名即可
			3.修改调用配置文件如下
				<VirtualHost ip地址:端口号>
					ServerName 域名
					DocumentRoot 网页文件路径
					Alias  /  动态网站主页文件路径
				</VirtualHost>
			4.重启服务
			5.完成
			六、翻译Python页面
			前提：客户端存在可以识别Python代码的软件，例如mod_wsgi
			1.安装httpd
			2.创建一个调用配置文件，任意命名即可
			3.修改调用配置文件如下
				<VirtualHost ip地址:端口号>
					ServerName 域名
					DocumentRoot 网页文件路径
					WsgiScriptAlias  /  动态网站主页文件路径
				</VirtualHost>
			4.重启服务
			5.完成
			七、搭建安全网站
			1.安装httpd和mod_ssl
			2.修改mod_ssl的配置文件
			3.重启服务
			4.完成



	DNS服务：
		软件名：bind（服务端）、bind-chroot（服务端）
		服务名：named（服务端）
		配置文件：/etc/named.conf				（主配置文件）
				重写整个文件如下：
					options {
						directory "/var/named";
					};
					zone "地址库名" {
						type master;
						file "地址库文件名";
					};
		配置文件：/etc/named/*				（地址库文件）
				
		常用命令：
			name-checkconf
			name-checkzone 地址库名 地址库文件绝对路径
		使用步骤：
			一、搭建DNS服务器：
			1.安装bind和bind-chroot
			2.修改主配置文件
			3.到相应目录下创建地址库文件，对应主配置文件中的地址库文件名进行命名
                        cp -p named.localhost   地址库文件名
			4.修改地址库文件如下
				从named.localhost获取头文件内容
				在最后增加：
					@		NS	域名
					www		A	地址a
					svr7		A	地址b
					pc207		A	地址c
			5.重启服务
			6.完成（可以在客户机先使用nmcli工具配置dns服务器地址，再使用“host+域名 ”验证DNS服务）
			二、实现DNS轮询（负载均衡）：
			1.安装bind和bind-chroot
			2.修改主配置文件
			3.到相应目录下创建地址库文件，对应主配置文件中的地址库文件名进行命名
			4.修改地址库文件如下
				从named.localhost获取头文件内容
				在最后增加：
					@		NS	域名
					www		A	地址a
					www		A	地址b
					www		A	地址c
			5.重启服务
			6.完成（可以在客户机先使用nmcli工具配置dns服务器地址，再多次使用“host+域名”验证DNS轮询）
			三、实现泛域名解析：
			1.安装bind和bind-chroot
			2.修改主配置文件
			3.到相应目录下创建地址库文件，对应主配置文件中的地址库文件名进行命名
			4.修改地址库文件如下
				从named.localhost获取头文件内容
				在最后增加：
					@		NS	域名
					*		A	地址
			5.重启服务
			6.完成（可以在客户机先使用nmcli工具配置dns服务器地址，再多次使用“host+任意前缀+域名”验证泛域名解析）
			四、搭建缓存DNS服务：
			1.安装bind和bind-chroot
			2.用pkill命令停用与DNS服务冲突的其他服务（如dnsmasq）
			3.修改主配置文件如下
				重写整个文件如下:
					options {
						forwarders { 公共DNS服务器地址; };
					};
			4.重启服务
			5.完成（可以在客户机先使用nmcli工具配置dns服务器地址，再使用“host+常用公共网站”验证缓存DNS服务）





	FTP服务：
		软件名：vsftpd（服务端）、lftp（客户端）
		服务名：vsftpd（服务端）
		主要作用：使其他终端用ftp：//访问本机地址时，可以访问本机共享在/var/ftp中的文件
		使用步骤：
			1.安装vsftpd
			2.将要共享文件放入/var/ftp目录下
			3.重启服务
			4.完成（可以用浏览器访问“ftp：//自身的地址”进行验证）




	Samba服务：
		软件名：samba（服务端）、samba-client（客户端）
		服务名：smb（服务端）
		配置文件：/etc/samba/smb.conf（服务端）
				[global]一栏中修改：
					workgroup = STAFF
				在最后增加：
					[ 共享名 ]
					path = 实际共享路径
					(write list = samba帐号)
		常用命令：
			pdbedit -a +用户名
			pdbedit -x +用户名
			pdbedit -L
			smbclient -U 用户名 //服务端ip地址/共享名
			smbclient -L +服务端ip地址
		主要作用：共享文件
		使用步骤：
			一、服务端搭建samba服务
			1.安装samba
			2.建立samba共享使用的用户帐号（可以使用pdbedit -L命令验证samba帐号）
			3.修改配置文件
			4.重启服务
			5.检查并修改SELinux中samba_export_all_ro和samba_export_all_rw的设置
			5.完成
			二、客户端访问服务端共享的文件
			前提：客户端存在支持samba挂载的软件，例如cifs-utils
			1.安装samba-client
			2.使用“smbclient -U 用户名 //服务端ip地址/共享名”连接到共享文件夹
			3.使用mount -o user=samba帐号,pass=密码(,_netdev,multiuser,sec=ntlmssp) //服务端ip地址/共享名 +目标挂载点
			4.完成（可以使用df -h验证挂载情况）



	NFS服务：
		软件名：nfs-utils（服务端）
		服务名：nfs-server（服务端）
		配置文件：/etc/exports
				共享路径+客户端地址(客户端权限）
		主要作用：共享文件
		使用步骤：
			1.安装服务端软件nfs-utils
			2.修改配置文件
			3.重启服务
       			4.完成

      Rsync :
                软件名：rsync
		服务名：rsyncd
		主要作用：同步操作
	
			
                命令用法：
                  rsync [选项...] 源目录    目标目录

                  同步与复制的差异
                  复制:完全拷贝源到目标
                  同步:增量拷贝,只传输变化过的数据
   
                一、本地同步
                rsync [选项...] 本地目录1    本地目录2
                rsync [选项...] 本地目录1/   本地目录2
                mkdir /todir
                rsync -a /boot  /todir    //同步整个文件夹
                rsync -a /boot/ /todir/  //只同步目录下的数据

                    同步控制
                rsync操作选项
                    -n:测试同步过程,不做实际修改
                    --delete:删除目标文件夹内多余的文档
                    -a:归档模式,相当于-rlptgoD
                    -v:显示详细操作信息
                    -z:传输过程中启用压缩/解压
                         1.同步
                    rsync -avz /nsd/   /test        
   
                         2.删除目标多余的文档
 
                    rsync -avz --delete  /nsd/  /test/

                二、rsync+SSH远程同步

                        与远程的 SSH目录保持同步
                           下行:rsync [...]   user@host:远程目录      本地目录
                           上行:rsync [...]   本地目录        user@host:远程目录




                        实时远程同步


                          一、无密码验证
                             1.生成公钥  私钥验证
                           ssh-keygen     #一路回车
                           ls /root/.ssh
                            id_rsa  id_rsa.pub  known_hosts 
                         /root/.ssh/known_hosts     #记录ssh远程客户端标识文件

                             2.传递公钥  到对方机器
                           ssh-copy-id root@192.168.4.207

                             3.测试无需密码
                           rsync -avz --delete /opt/  root@192.168.4.207:/opt/


                         二、目录内容的监控


                             1.安装 inotify-tools 控制工具可调用此机制实现监控
                             标准的源码、编译安装即可
                        
                                 步骤1：安装gcc与make
                               yum -y install gcc make

                                 步骤2：tar进行解包
                               tar -xf  /tools/inotify-tools-3.13.tar.gz  -C   /
                               ls /
                               cd /inotify-tools-3.13
                               ls

                                步骤3：  ./configure 配置,指定功能模块等选项
                                       检测系统是否安装gcc
                            --prefix=路径      #指定安装目录

                               cd /inotify-tools-3.13
                               ./configure


                                    常见错误提示：gcc软件没有安装
                              checking for gcc... no
                              checking for cc... no
                              checking for cl.exe... no
                              configure: error: no acceptable C compiler found in $PATH
                              See `config.log' for more details.


                               步骤4:   make 编译,生成可执行的二进制程序文件
                               cd /inotify-tools-3.13
                               make


                               步骤5:   make install 安装,将编译好的文件复制到安装目录
                               cd /inotify-tools-3.13
                               make  install

                        which inotifywait     #查看是否具备该程序
                        /usr/local/bin/inotifywait

                 Inotifywait  : 
                              基本用法:
                         inotifywait [选项] 目标文件夹

                                常用命令选项
                              -m,持续监控(捕获一个事件后不退出)
                              -r,递归监控、包括子目录及文件
                              -q,减少屏幕输出信息
                              -e,指定监视的 modify、move、create、delete、attrib 等事件类别(不打默认所有)

                        inotifywait -rq /opt/


              三、书写Shell脚本

                        vim /root/rsync.sh
                        #!/bin/bash 
                        while inotifywait -rqq /opt/
                        do
                        rsync -az --delete /opt/  root@192.168.4.207:/opt/
                        done &

                        chmod +x /root/rsync.sh




	MariaDB：
		软件名：mariadb-server
		服务名：mariadb
		配置文件：/etc/my.cnf
		常用命令：
			mysql
			mysql -u 用户名 -p密码
			mysqladmin -u 用户名 (-p旧密码) password '新密码'
			show databases;
			create database +库名;
			drop database +库名;
			use +库名;
			show tables;
			desc 表名;
			select 查找字段 from 表名;
			select * from 库1,库2 where 库1.表1='查找字段1' and 库2.表2='查找字段2';
			insert 库名 values (数据ID，'表1数据'，'表2数据'...'表N数据')
			delete from 库名 where 表1='查找字段1';
			grant 权限类型 on 库名.表名 to 用户名@用户登陆的ip地址 identified by '密码';
			flush privileges;
			exit
		主要作用：数据库
		使用步骤：
			1.安装mariadb-server
			2.重启服务
			3.用mysqladmin命令设置数据库管理员root的密码
			4.完成（可以用mysql -u root -p密码登陆数据库进行验证




          DHCP:
                DHCP概述及原理

                       Dynamic Host Configuration Protocol
                              动态主机配置协议,由 IETF(Internet 网络工程师任务小组)组织制定, 用来简化主机地址分配管理

                             主要分配以下入网参数
                              IP地址/子网掩码/广播地址
                                       默认网关地址、DNS服务器地址


                DHCP概述及原理（广播进行，一个网络中只能有一个DHCP服务器，先到先的）
                    DHCP地址分配的四次会话
                           – DISCOVERY --> OFFER --> REQUEST -->ACK
                   软件名：dhcp
                   服务名：dhcpd
                   配置文件：/etc/dhcp/dhcp.conf(:r /usr/share/doc/dhcp*/dhcpd.conf.example)
                   配置字段：
                              subnet 10.5.5.0 netmask 255.255.255.224 {               ：网段及子网掩码
                              range 10.5.5.26 10.5.5.30;                              ：分配的的地址 
                              option domain-name-servers ns1.internal.example.org;    ：为客户端指明DNS服务器的IP地址
                              option domain-name "internal.example.org";              ：为客户端指明DNS名字
                              option routers 10.5.5.1;                                ：为客户端设定默认网关
                              option broadcast-address 10.5.5.31;                     ：为客户端设定广播地址
                              default-lease-time 600;                                 ：默认租约时间
                              max-lease-time 7200;                                    ：设置最大租约时间
                                       }
         
                  
                                                   subnet-mask：为客户端设定子网掩码
                                                   domain-name：为客户端指明DNS名字
                                                   domain-name-servers：为客户端指明DNS服务器的IP地址
                                                   host-name：为客户端指定主机名称
                                                   routers：为客户端设定默认网关
                                                   broadcast-address：为客户端设定广播地址
                                                   ntp-server：为客户端设定网络时间服务器的IP地址
                                                   time-offset：为客户端设定格林威治时间的偏移时间，单位是秒


                 主要作用：分配IP地址
		 使用步骤：
			1.安装dhcp
			2.修改配置文件
			3.重起服务
			4.完成


  


       PXE:网络装机(PXE,Pre-boot eXecution Environment)

                            规模化:同时装配多台主机
                            自动化:装系统、配置各种服务
                            远程实现:不需要光盘、U盘等物理安装介质
                 PXE
                            预启动执行环境,在操作系统之前运行
                            可用于远程安装
                          工作模式
                       PXE client 集成在网卡的启动芯片中
                              当计算机引导时,从网卡芯片中把PXE client调入内存执行,
                              获取PXE server配置、显示菜单,根据用户选择将远程引导程序下载到本机运行

                     需要哪些服务组件?
                       DHCP服务,分配IP地址、定位引导程序
                       TFTP服务,提供引导程序下载 
                       HTTP服务,提供yum安装源

                     需要下载那些文件
                        pxelinux.0:网卡引导文件(网络装机说明书) 二进制文件安装一个软件可以自动产生默认叫pxelinux.0
            一、配置DHCP网络装机设置

                       配置文件：/etc/dhcp/dhcpd.conf
                     1.修改配置文件
                    subnet 192.168.4.0 netmask 255.255.255.0 {
                    range 192.168.4.100 192.168.4.200;
                    option domain-name-servers 192.168.4.7;
                    option routers 192.168.4.254;
                    default-lease-time 600;
                    max-lease-time 7200;
                    next-server  192.168.4.7;   #指定下一个服务器
                    filename  "pxelinux.0";     #指定网卡引导文件名称
                          }

                    2.重起dhcpd服务 systemctl restart dhcpd
                           

                           

              二、搭建tftp服务，提供众多的引导文件

                       简单的文件传输协议   端口 69
                  tftp默认共享数据路径：/var/lib/tftpboot

                     1.安装tftp-server软件包   
                   yum -y install tftp-server

                     2.启动tftp服务即可
                   systemctl restart tftp

                     3.部署pxelinux.0文件
                   yum provides */pxelinux.0       #查询仓库中那个软件包产生该文件
                   yum -y install syslinux        
                   rpm -ql syslinux | grep pxelinux.0  #查询已安装的软件包安装清单
                   cp /usr/share/syslinux/pxelinux.0   /var/lib/tftpboot/
                   ls /var/lib/tftpboot/

                     4.部署菜单文件  
                    pxelinux.0----》/var/lib/tftpboot/pxelinux.cfg/default

                    mkdir  /var/lib/tftpboot/pxelinux.cfg
                    mount  /dev/cdrom   /mnt/
                    ls  /mnt/
                    cp  /mnt/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg/default
                    ls  /var/lib/tftpboot/pxelinux.cfg
                    ls  -l  /var/lib/tftpboot/pxelinux.cfg/default
                    chmod  u+w  /var/lib/tftpboot/pxelinux.cfg/default
                    ls  -l  /var/lib/tftpboot/pxelinux.cfg/default

                     5.部署引导文件
                    vesamenu.c32  图形模块，呈现背景图片  及 颜色
                    vmlinuz       启动内核
                    initrd.img    驱动程序
                    splash.png    黑色背景图片

                    cp /mnt/isolinux/vesamenu.c32 
                       /mnt/isolinux/vmlinuz 
                       /mnt/isolinux/initrd.img 
                       /mnt/isolinux/splash.png     /var/lib/tftpboot/

                    ls /var/lib/tftpboot/
                        initrd.img  pxelinux.cfg  vesamenu.c32
                         pxelinux.0  splash.png    vmlinuz

                     6.修改菜单文件内容
                    vim  /var/lib/tftpboot/pxelinux.cfg/default
                    1 default vesamenu.c32    默认加载图形模块
                    2 timeout 600             默认读秒

                    10 menu background splash.png     指定默认的表背景图片
                    11 menu title NSD1806 PXE Server  指定菜单的标题  

                    61 label linux 
                    62 menu label Install RHEL7     菜单显示内容
                       menu default                 读秒结束默认选择
                    63 kernel vmlinuz               加载内核
                    64 append initrd=initrd.img     加载驱动程序

               三、构建httpd服务，利用Web共享众多的RPM包

                       1.安装软件包
                    yum -y install httpd
                    systemctl restart httpd


                       2.建立共享路径
                     mkdir /var/www/html/rhel7
                     mount /dev/cdrom  /var/www/html/rhel7
                     mount: /dev/sr0 写保护，将以只读方式挂载
                     ls /var/www/html/rhel7

                       3.测试
                     firefox 192.168.4.7/rhel7


                 四、部署无人值守安装，生成应答文件

                       1.图形生成应答文件工具system-config-kickstart 
                     yum -y install system-config-kickstart 

                       2.运行工具system-config-kickstart 
                     system-config-kickstart 
                            检测 “软件包选择” 是否可以选择

                            与本机Yum仓库标识: [development]
                      vim /etc/yum.repos.d/rhel7.repo 
                      [development]

                      system-config-kickstart 
                            检测 “软件包选择” 是否可以选择

                      3.查看应答文件
                      ls /root/ks.cfg 
                      vim  /root/ks.cfg

                      4.利用Web共享ks文件，传递给客户端 
                      cp  /root/ks.cfg  /var/www/html/
                      ls  /var/www/html/

                   五、修改菜单文件，指定ks应答文件
                      vim /var/lib/tftpboot/pxelinux.cfg/default 

                      label linux
                      menu label Install RHEL7
                      menu default
                      kernel vmlinuz
                      append initrd=initrd.img  ks=http://192.168.4.7/ks.cfg

                    六、总结
                    dhcp----》IP地址、next-server、filename
                    tftp----》pxelinux.0
                    pxelinux.0----》/var/lib/tftpboot/pxelinux.cfg/default
                    default----》vesamenu.c32\splash.png\vmlinuz\initrd.img
                    ks=http://192.168.4.7/ks.cfg---》url --  url="http://192.168.4.7/rhel7"



            Cobbler装机平台,不同版本的多系统的安装

                         一 、安装一个CentOS虚拟机   CentOS-7-x86_64-DVD-1708.iso

                       虚拟机要求:
                                 1.硬盘大小50G
                                 2.网络类型private1
                                 3.软件包选择 "带GUI的服务器"
                                 4.分区选择 "自动分区"

                                 5.将CentOS放入光驱设备,搭建本地Yum仓库
                                 6.配置IP地址:192.168.4.168/24
                                 7.配置主机名:Cobbler.tedu.cn

                       二、虚拟机设置  
                                 1.设置防火墙为trusted
                             firewall-cmd  --set-default-zone=trusted 

                                 2.当前及永久设置SELinux状态为permissive
                             setenforce 0    #当前临时关闭
                             getenforce 
                             vim /etc/selinux/config 
                             SELINUX=permissive


                       三、利用scp真机传递Cobbler.zip包到虚拟机192.168.4.168中
                         scp /root/桌面/Cobbler.zip   root@192.168.4.168:/root/
 	

                       四、搭建Cobbler装机平台

                            Cobbler概述软件，管理dhcp、tftp、Web服务
                                    自由的导入镜像与ks应答文件

                             1.解压Cobbler.zip包
                            unzip /root/Cobbler.zip -d /
                            cd /Cobbler/
                            ls

                            unzip /Cobbler/cobbler.zip  -d  /opt/ 
                            ls /opt/cobbler


                       五、安装cobbler主程序、工具包等
                             yum -y install /opt/cobbler/*.rpm

                      cobbler网络装机部署

                                1.安装软件 cobbler cobbler-web dhcp tftp-server pykickstart httpd  tftp-server 

                             cobbler         #cobbler程序包
                             cobbler-web     #cobbler的web服务包
                             pykickstart     #cobbler检查kickstart语法错误 
                             httpd           #Apache web服务
                             dhcp            #dhcp服务
                             tftp-server     #tftp服务


                              2.配置cobbler
                             vim  /etc/cobbler/settings

                             next_server:   192.168.4.168    #设置下一个服务器还为本机
                             server:   192.168.4.168         #设置本机为cobbler服务器
                             manage_dhcp:   1                #设置cobbler管理dhcp服务
                             pxe_just_once:   1              #防止客户端重复安装操作系统

                                   开机启动： 匹配及停止  
                                           1.硬盘启动    2.光驱设备     3.U盘     4.网络引导  

                              3.配置cobbler的dhcp
                             vim  /etc/cobbler/dhcp.template 

                             :%s  /旧/新/g      #全文替换

                             :%s  /192.168.1/192.168.4/g    #全文替换

                                     5 次替换，共 4 行   

                              4.绝对路径解压cobbler_boot.tar.gz    #众多的引导文件

                             tar -tf  /Cobbler/cobbler_boot.tar.gz   #查看包里面内容
                             tar -xPf  /Cobbler/cobbler_boot.tar.gz  #绝对路径释放
                             ls  /var/lib/cobbler/loaders/

                              5.启动相关服务
                             systemctl restart cobblerd 
                             systemctl enable cobblerd

                             systemctl restart httpd
                             systemctl enable httpd

                             systemctl restart tftp
                             systemctl enable tftp

                             systemctl restart rsyncd   #同步服务
                             systemctl enable rsyncd

                              6.同步刷新cobbler配置
                             cobbler sync
                                      ......
                        *** TASK COMPLETE ***(表示成功)

                          firefox https://192.168.4.168/cobbler_web

                                       用户名：cobbler
                                        密码：cobbler





                       cobbler应用

                            cobbler import  --path=挂载点   --name=导入系统命名（随意起）
                                    导入安装镜像数据

                            mount /dev/cdrom  /dvd

                            ls /dvd/

                            cobbler import --path=/dvd  --name=CentOS7

                            cobbler导入的镜像放在：/var/www/cobbler/ks_mirror

                            cobbler list    #查看有哪些系统
                            distros:
                            CentOS7-x86_64        #安装客户端至少2G内存

                            profiles:
                            CentOS7-x86_64


                                  删除
                             cobbler list 
                             cobbler profile remove --name=CentOS7-x86_64  #删除菜单信息
                             cobbler distro remove --name=CentOS7-x86_64  #删除镜像信息


  
                              umount /dvd/
                              mount /dev/cdrom  /dvd   将光盘换成RHEL7
                              ls /dvd/

                                 安装完成机器 默认root  密码  cobbler

 
                                 自定义应答文件：开头注释行删除


                             system-config-kickstart  #生成ks文件

                                      必须默认kickstart文件存放位置：/var/lib/cobbler/kickstarts/

                             cobbler list

                                      修改kickstart文件：
                              cobbler profile edit --name=CentOS7.4-A  --kickstart=/var/lib/cobbler/kickstarts/自定义.cfg

                              cobbler profile report
                              cobbler sync  #同步配置

 
































 VIM笔记汇总              


                       打开VIM的方式：
                          vim							*vim新建空白文本
                          vim 文件					*vim打开文本文件进行修改
                          vim 文件 +行数				*vim打开文本文件并定位到特定行

                          注意：	一般情况，“数字+命令”的格式可以理解为循环n次执行该命令。以下没有特殊情况不作说明。


                             光标跳转

                              Home				跳转到行首
                                       ^					同Home
                              End					跳转到行尾
                                       $					同End
                                       _					同Home
                                       -					跳转上一行行首
                                       =					同Home
                                       +					跳转下一行行首
                              gg					跳转到文本首行
                              G					跳转到文本末行
                                     （数字+G）			跳转到第n行
                                     （数字+gg）			同“数字+G”
                                      [[					同gg
                                      ]]					同G
                                      {{					跳转到上一个空行
                                      }}					跳转到下一个空行
                              w					跳转到下一个不同类字串首位（符号串、字母串、数字串）
                              W					跳转到下一个参数首位（以空格和回车作为分隔符）
                              e					跳转到下一个不同类字串末位
                              E					跳转到下一个参数末位
                              b					跳转到上一个不同类字串首位
                              B					跳转到上一个参数首位

                              f+字符				从光标处向后检索第一个该字符，并跳转（同一行中有效）
                              F+字符				从光标处向前检索第一个该字符，并跳转
                              t+字符				从光标处向后检索第一个该字符，并跳转到它的前一位
                              T+字符				从光标处向前检索第一个该字符，并跳转到它的后一位

                              h					光标左移一格
                              j					光标下移一格
                              k					光标上移一格
                              l					光标右移一格           
                              H					跳转到当前页面首行
                              M					跳转到当前页面中间行
                              L					跳转到当前页面末行
                              n					跳转到下一个查找内容
                              N					跳转到上一个查找内容

                                      ‘”				设置标记行并跳转文本首行
                                      ‘’				跳转标记行或跳转回来（若没设置标记，则默认是标记行首）

                             修改

                                        .					重复执行上一个修改命令
                               yy					复制一行
                                       （数字+yy）			      复制n行
                               Y					同yy
                               dd					剪切一行
                                       （数字+dd）			      剪切n行
                              （d+跳转命令）		将跳转处到光标之间的内容剪切
                               D					从光标处向后剪切一行（含光标处）
                                       （数字+D）			从光标处向后剪切n行
                               x					剪切一个字符
                                       （数字+x）			剪切n个字符
                               X					剪切光标前一个字符
                                       （数字+X）			剪切光标前n个字符（不含光标处，同一行中有效）

                               r+字符				光标处替换字符为新字符
                                      （数字+r+字符）		光标处连续替换n个字符为新字符

                               J					替换行末回车为空格（合并下一行）
                               Delete				同x

                               p					向后或向下粘贴
                               P					向前或向上粘贴

                               u					撤销上一步
                               Ctrl+R				还原上一次撤销
                               U					撤销最近一步，或还原该撤销

                                        >>					突出一行（行首增加一个水平制表符）
                              （n>>）				突出n行
                              （>m>）				同上
                              （n>m>）			突出n*m行
                                        <<					缩进一行（行首删除一个水平制表符，没有制表符则不删）
                              （n<<）				缩进n行
                              （<m<）				同上
                              （n<m<）			缩进n*m行

                         切换模式

                               qq				记录模式
                                q				退出记录模式
                                i				光标前插入模式
                                v				可视模式（可以将下一个命令复制、剪切的对象改为选中对象）
                                v				退出可视模式
                               Esc				退出插入模式，回到命令模式
                                         :				末行模式（“:+命令”可以运行命令）
                               :q								退出
                               :q!								强制退出
                               :w								保存
                               :wq								保存并退出
                               :x								同wq
                               :r +文件路径					读取其他文件内容并在当前插入
                               :s/目标字串/新字串				替换当前行第一个目标字串为新字串
                               :s/目标字串/新字串/g			替换当前行所有目标字串为新字串
                               :n,m s/目标字串/新字串/g		替换n-m行所有目标字串为新字串
                               :% s/目标字串/新字串/g			替换文件中所有目标字串为新字串
                               :set nu						启用行号显示
                               :set nonu						关闭行号显示
                               :set ai						启用自动缩进
                               :set noai						关闭自动缩进
                                       /				末行模式（“/+字串”可以高亮标出文本中全部该字串）

                                       组合

                              I				=Home+i			先跳转行首，再进入插入模式
                              a				=l+i			先光标右移一格，再进入插入模式
                              A				=End+i			先跳转行末，再进入插入模式
                              o								先向下插入空行并跳转，再进入插入模式
                              O								先向上插入空行并跳转，再进入插入模式
                              s				=x+i			先剪切一个字符，再进入插入模式
                              S				=dd+i			先剪切一行，再进入插入模式
                              c+跳转命令		=d#+i			先将跳转处到光标之间的内容剪切，再进入插入模式
                              C				=D+i			先从光标处向后剪切一行，再进入插入模式

                       其他

                              K				使用man方法查询光标所在单词（不是单词则向后检索直到遇到单词）
                              zz				移动页面使光标出于页面中间行
                              ZZ				保存并退出，同“:wq”	








 扩展 ：





         /      根目录，是所有目录树开始的地方。

       /bin   此目录下包括了单用户方式及系统启动或修复所用到的所有执行程序。

       /boot  包括了引导程序的静态文件。此目录下包括了在引导过程中所必需的文件。
              系统装载程序及配制文件在 /sbin 和 /etc 目录中找到。

       /dev   对应物理设备的指定文件或驱动程序。参见mknod(1)。

       /dos   如果MS-DOS和Linux共存于一台计算机时，这里通常用于存放DOS
              文件系统。

       /etc   用于存放本地机的配置文件。一些大型软件包，如X11，在         /etc
              下有它们自己的子目录。系统配置文件可以放在这里或在    /usr/etc。
              不过所有程序总是在                                          /etc
              目录下查找所需的配置文件，你也可以将这些文件连结到目录 /usr/etc.

       /etc/skel
              当建立一个新用户帐号时，此目录下的文件通常被复制到用户的主目录下。

       /etc/X11
              X11 window system所需的配置文件。

       /home  在Linux机器上，用户主目录通常直接或间接地置在此目录下。其结构通
              常由本地机的管理员来决定。

       /lib   此目录下包含系统引导和在根用户执行命令所必需用到的共享库。

       /mnt   挂载临时文件系统的挂载点。

       /proc  这是提供运行过程和核心文件系统                              proc
              挂载点。这一"伪"文件系统在以下章节中有详细叙述 proc(5)。

       /sbin  类似于                                                      /bin
              此目录保存了系统引导所需的命令，但这些命令一般用户不能执行。

       /tmp   此目录用于保存临时文件，临时文件在日常维护或在系统启动时无需通知便
              可删除

       /usr   此目录通常用于从一个独立的分区上挂载文件。它应保存共享只读类文件，
              这样它可以被运行Linux的不同主机挂载。

       /usr/X11R6
              X-Window系统 Version 11 release 6.

       /usr/X11R6/bin
              X-Windows系统使用的二进制文件；通常是在对更传统的   /usr/bin/X11
              中文件的符号连接。

       /usr/X11R6/lib
              保存与X-Windows系统有关数据文件。

       /usr/X11R6/lib/X11
              此目录保存与运行X-Windows系统有关其他文件。通常是对来自
              /usr/lib/X11 中文件的符号连接。

       /usr/X11R6/include/X11
              此目录保存包括使用X11视窗系统进行编译程序所需的文件。通常是对来自
              /usr/lib/X11 中文件的符号连接。

       /usr/bin
              这是执行程序的主要目录，其中的绝大多数为一般用户使用，
              除了那些启动系统或修复系统或不是本地安装的程序一般都
              放在此目录下。

       /usr/bin/X11
              X11执行文件放置的地方；在Linux系统中，它通常是对 /usr/X11R6/bin.
              符号连接表

       /usr/dict
              此目录保存拼写检查器所使用的词汇表文件。

       /usr/doc
              此目录下应可以找到那些已安装的软件文档。

       /usr/etc
              此目录可用来那些存放整个网共用的配置文件。然而那可执行命
              令指向总是使用参照使用       /etc       目录下的文件。      /etc
              目录下连接文件应指向 /usr/etc.  目录下适当的文件。

       /usr/include
              C程序语言编译使用的Include"包括"文件。

       /usr/include/X11
              C程序语言编译和X-Windows系统使用的       Include"包括"文件。它通
              常中指向 /usr/X11R6/include/X11.  符号连接表。

       /usr/include/asm
              申明汇编函数的Include"包括"文件，它通常是指向
              /usr/src/linux/include/asm 目录的符号连接

       /usr/include/linux
              包含系统变更的信息通常是指向        /usr/src/linux/include/linux
              目录的符号连接表，来获得操作系统特定信息。

              (注：用户应在此自行包含那些保证自己开发的程序正常运行所需的libc
              函数库。不管怎样，Linux核心系统不是设计用来执行直接运行用户程序
              的，它并不知道用户程序需要使用哪个版本的libc库    。如果你随意将
              /usr/include/asm              和              /usr/include/linux
              指向一个系统内核，系统很可能崩溃。Debian系统不这么做。它使用
              libc*-dev运行包中提供的内核系统标识，以保证启动所有正确的文件。)

       /usr/include/g++
              GNU C++编译器所使用的Include"包括"文件。

       /usr/lib
              目标库文件，包括动态连接库加上一些通常不是直接调用的可执行文件。一
              些复杂的程序可能在此占用整个子目录。

       /usr/lib/X11
              存放X系统数据文件及系统配置文件的地方。        Linux中通常是指向
              /usr/X11R6/lib/X11 目录的符号连接表。

       /usr/lib/gcc-lib
              GNU C 编译器所使用的可执行文件和"包括"文件。 gcc(1).

       /usr/lib/groff
              GNU groff 文档格式系统所使用的文件。

       /usr/lib/uucp
              uucp(1) 所使用的文件。

       /usr/lib/zoneinfo
              有关时区信息文件文件。

       /usr/local
              安装在本地执行程序的地方。

       /usr/local/bin
              在此地放置本地执行程序的二进制文件。

       /usr/local/doc
              放置本地文档。

       /usr/local/etc
              安装在本地程序的配置文件。

       /usr/local/lib
              安装在本地程序的库文件。

       /usr/local/info
              安装在本地程序有关信息文件。

       /usr/local/man
              安装在本地程序使用手册。

       /usr/local/sbin
              安装在本地的系统管理程序。

       /usr/local/src
              安装在本地程序的源代码。

       /usr/man
              手册页通常放在此目录，或相关子目录下。

       /usr/man//man[1-9]
              此目录在指定的地方以源代码形式存放手册页。系统在所有的手册
              页中使用自己独特的语言及代码集，可能会省略 substring 子字串。

       /usr/sbin
              此目录保存系统管理程序的二进制码，这些文件不是系统启动或文件
              系统挂载 /usr 目录或修复系统所必需的。

       /usr/share
              在此目录下不同的子目录中保存了同一个操作系统在不同构架下工作
              时特定应用程序的共享资料。用户可以找到通常放在    /usr/doc    或
              /usr/lib 或 /usr/man 目录下的这些资料。

       /usr/src
              系统不同组成部份的源文件包括参考资料包。不要将你自己与项目有关的文
              件放这里，因为在安装软件外，/usr下的文件属性除通常设为只读。

       /usr/src/linux
              系统内核资源通常拆包安装于此。这是系统中重要的一环，因为
              /usr/include/linux
              符号连接表指向此目录。你应当使用其他目录来来编译建立新内核。

       /usr/tmp
              此目录不再使用了。它应指向目录                        /var/tmp。
              这个链接只是出于系统兼容的目的，一般不再使用。

       /var   此目录下文件的大小可能会改变，如缓冲文件可日志文件。

       /var/adm
              此目录为 /var/log 甩替代，通常是指向 /var/log 的符号连接表。

       /var/backups
              此目录用来存放重要系统文件的后备文件

       /var/catman/cat[1-9] or /var/cache/man/cat[1-9]
              此目录存放根据手册分类预先格式化的参考手册页。(这些参考手册
              页是相互独立的)

       /var/lock
              此目录存放锁定文件。依据命名习惯，设备锁定文件是        LCKxxxxx
              xxxxx与在文件系统中该设备名相同，使用的格式是HDU  UUCP锁定文件，
              例如包含进程标识PID的锁定文件是一个10字节的ASCII格式的数字，
              后面跟一个换行符。

       /var/log
              各种日志文件。

       /var/preserve
              这是 vi(1) 存放正在编辑中的文件，以便以后可以恢复。

       /var/run
              运行时的变量文件，如存放进程标识和登录用户信息的文件。    (utmp)
              此目录下文件在系统启动时被自动清除。

       /var/spool
              各种程序产生的缓冲或排除等待的文件

       /var/spool/at
              at(1) 的作业存缓区

       /var/spool/cron
              cron(1) 的作业存缓区

       /var/spool/lpd
              打印缓存文件。

       /var/spool/mail
              用户邮箱。

       /var/spool/smail
              存放 smail(1) 邮件发送程序的缓冲文件。

       /var/spool/news
              新闻子系统的缓冲目录

       /var/spool/uucp
              uucp(1) 的缓冲文件

       /var/tmp
              类似 /tmp, 此目录保存未指定持续时间的临时文件。



            cat [-AbeEnstTuv] [--help] [--version] fileName
参数说明：
            -n 或 --number：由 1 开始对所有输出的行数编号。
            -b 或 --number-nonblank：和 -n 相似，只不过对于空白行不编号。
            -s 或 --squeeze-blank：当遇到有连续两行以上的空白行，就代换为一行的空白行。
            -v 或 --show-nonprinting：使用 ^ 和 M- 符号，除了 LFD 和 TAB 之外。
            -E 或 --show-ends : 在每行结束处显示 $。
            -T 或 --show-tabs: 将 TAB 字符显示为 ^I。
            -e : 等价于 -vE。
            -A, --show-all：等价于 -vET。
            -e：等价于"-vE"选项；
            -t：等价于"-vT"选项；
               







